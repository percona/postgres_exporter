name: Go

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:

jobs:
  test:
    name: Test
    strategy:
      matrix:
        go-version:
          - 1.17
        postgresql-image:
          - postgres:10
          - postgres:11
          - postgres:12
          - postgres:13
          - postgres:14
    runs-on: ubuntu-latest
    # The environment this job references
    environment:
      name: CI
    steps:
    - name: Set up Go release
      uses: percona-platform/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: percona-platform/checkout@v2
    - name: Run checks
      run: |
        go build -modfile=tools/go.mod -o bin/golangci-lint github.com/golangci/golangci-lint/cmd/golangci-lint
        go build -modfile=tools/go.mod -o bin/reviewdog github.com/reviewdog/reviewdog/cmd/reviewdog
        bin/golangci-lint run -c=.golangci-required.yml --out-format=line-number | env REVIEWDOG_GITHUB_API_TOKEN=${{ secrets.GITHUB_TOKEN }} bin/reviewdog -f=golangci-lint -level=error -reporter=github-pr-check
        bin/golangci-lint run -c=.golangci.yml --out-format=line-number | env REVIEWDOG_GITHUB_API_TOKEN=${{ secrets.GITHUB_TOKEN }} bin/reviewdog -f=golangci-lint -level=error -reporter=github-pr-review
    - name: Run Tests
      run: |
        sudo chown 999:999 testdata/ssl/server/*
        sudo chmod 600 testdata/ssl/server/*
        docker-compose up -d
        make
        make test
      env:
        POSTGRESQL_IMAGE: ${{ matrix.postgresql-image }}
    - name: Run debug commands on failure
      if: ${{ failure() }}
      run: |
        env
        go version
        go env
        pwd
        git status
        docker --version
        docker-compose --version
        docker-compose logs
